const express = require('express');
const kafka = require('kafka-node');
const bodyParser = require('body-parser');

//client = new kafka.Client('my-kafka-zookeeper:2181/'),  //Default localhost:2181/
//const HighLevelProducer = kafka.HighLevelProducer;
const Producer = kafka.Producer;
//const client = new kafka.Client();
const client = new kafka.KafkaClient({kafkaHost: 'localhost:9092'});
//const KeyedMessage = kafka.KeyedMessage;
//const km = new KeyedMessage('key', 'message');

const options = {
    requireAcks: 1,
    ackTimeoutMs: 100,
    partitionerType: 0
};

//var producer = new HighLevelProducer(client, options);
var producer = new Producer(client, options);

const payloads = [
    { topic: 'topic3', messages: 'hi '},
    { topic: 'topic4', messages: ['hello', 'world'] }
];

producer.on('ready', function () {
    client.refreshMetadata(['topicCoinbase'], function(err3) {
        if (!err3) {
            setInterval(() => {
                producer.send(payloads, function (err, data) {
                  console.log('Send messagge: ', data);
                });
            }, 1000);
        }
    });
});
producer.on('error', (e) => { console.log(e); });

/*
var whenProducerReady = new Promise(function (resolve, reject) {
    producer.on('ready', function () {
      resolve(producer);
    });
});

function sendToProducer (payloads, cb) {
    whenProducerReady
      .then(function (producer) {
        console.log('Getting ready to send messages', payloads);
        producer.send(payloads, cb);  
      });
} 
sendToProducer(payloads, function (err, result) {
    //if (err) throw err;
    if (err) { console.log('Error!'); }
    console.log('Sent payloads to producer!');
});
*/

//producer.on("ready", function(err, response) {
    //console.log("Producer is ready");
    //client.refreshMetadata(["test"], function(err3) {
        //if (!err3) {
            //producer.send(payloads, function(err, result) {
                //console.log('READY');
                //producer.close();
                //client.close();
            //});
        //}
    //})
//});
//producer.on("error", function (err) { console.log("Error in initialization"); });

const app = express(); 
app.use(bodyParser.json());

app.get('/coinbase', (req, res)=>{
    res.send({ Greetings: 'Kafka Producer running at Port 5001'});
});

const PORT = process.env.PORT || 5001;
app.listen(PORT);